<?php

namespace app\models\search;

use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use app\models\Saldorekening as SaldorekeningModel;
use yii\db\Expression;
use yii\db\Query;
use yii\helpers\ArrayHelper;

/**
 * Saldorekening represents the model behind the search form about `app\models\Saldorekening`.
 */
class Saldorekening extends SaldorekeningModel
{
    public $namaRekening;
    public $kodeRekening;
    public $jenisRekening;
    public $idkategorirekening;
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['replid', 'detilrekening', 'tahunajaran','idkategorirekening'], 'integer'],
            [['nominal'], 'number'],
            [['namaRekening','kodeRekening','jenisRekening'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(),[
            'idkategorirekening' => Yii::t('app','Kategori Rekening')
        ]); // TODO: Change the autogenerated stub

    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = (new Query())
            ->select([
                'sr.*',
                'idrekening' => 'r.replid',
                'idkategorirekening' => 'kr.replid',
                'kategorirekening' => 'kr.nama',
                'r.kode',
                'r.nama',
                'kr.jenis',
                'saldo' => new Expression('IFNULL(sr.nominal,0)')
            ])
            ->from(['r' => \app\models\Detilrekening::tableName()])
            ->leftJoin(['sr' => self::tableName()],'sr.detilrekening = r.replid')
            ->leftJoin(['kr' => \app\models\KategoriRekening::tableName()],'kr.replid = r.kategorirekening')
            ->groupBy(['r.replid'])
            ->orderBy([
                'idkategorirekening' => SORT_ASC,
                'kode' => SORT_ASC
            ]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'key' => 'replid'
        ]);

        $this->load($params);
        if (!$this->validate()) {
            $query->where('1=0');
            return $dataProvider;
        }

        $query->andFilterWhere([
            'sr.detilrekening' => $this->detilrekening,
            'sr.tahunajaran' => $this->tahunajaran,
            'kr.replid' => $this->idkategorirekening,
            'kr.jenis' => $this->jenisRekening,
        ]);
        $query
            ->andFilterWhere(['like', 'r.nama', $this->namaRekening])
            ->andFilterWhere(['like', 'r.kode', $this->kodeRekening]);

        return $dataProvider;
    }
}
